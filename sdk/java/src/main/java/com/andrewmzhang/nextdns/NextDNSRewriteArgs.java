// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.andrewmzhang.nextdns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NextDNSRewriteArgs extends com.pulumi.resources.ResourceArgs {

    public static final NextDNSRewriteArgs Empty = new NextDNSRewriteArgs();

    /**
     * IP Address or Domain to rewrite domain name to.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return IP Address or Domain to rewrite domain name to.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * Domain name to apply rewrite to.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Domain name to apply rewrite to.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Profile Id to apply rewrite to. This overrides the default profile id.
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<String> profileId;

    /**
     * @return Profile Id to apply rewrite to. This overrides the default profile id.
     * 
     */
    public Optional<Output<String>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    private NextDNSRewriteArgs() {}

    private NextDNSRewriteArgs(NextDNSRewriteArgs $) {
        this.content = $.content;
        this.name = $.name;
        this.profileId = $.profileId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NextDNSRewriteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NextDNSRewriteArgs $;

        public Builder() {
            $ = new NextDNSRewriteArgs();
        }

        public Builder(NextDNSRewriteArgs defaults) {
            $ = new NextDNSRewriteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content IP Address or Domain to rewrite domain name to.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content IP Address or Domain to rewrite domain name to.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param name Domain name to apply rewrite to.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Domain name to apply rewrite to.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param profileId Profile Id to apply rewrite to. This overrides the default profile id.
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId Profile Id to apply rewrite to. This overrides the default profile id.
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        public NextDNSRewriteArgs build() {
            if ($.content == null) {
                throw new MissingRequiredPropertyException("NextDNSRewriteArgs", "content");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("NextDNSRewriteArgs", "name");
            }
            return $;
        }
    }

}
